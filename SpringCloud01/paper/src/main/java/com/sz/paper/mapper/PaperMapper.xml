<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sz.paper.dao.PaperMapper">
  <resultMap id="BaseResultMap" type="com.sz.paper.model.Paper">
    <id column="paperId" jdbcType="INTEGER" property="paperid" />
    <result column="paperName" jdbcType="VARCHAR" property="papername" />
    <result column="paperType" jdbcType="VARCHAR" property="papertype" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    paperId, paperName, paperType, method, remarks, createTime
  </sql>
  <select id="selectByExample" parameterType="com.sz.paper.model.PaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_paper
    where paperId = #{paperid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_paper
    where paperId = #{paperid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sz.paper.model.PaperExample">
    delete from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sz.paper.model.Paper">
    insert into exam_paper (paperId, paperName, paperType, 
      method, remarks, createTime
      )
    values (#{paperid,jdbcType=INTEGER}, #{papername,jdbcType=VARCHAR}, #{papertype,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sz.paper.model.Paper">
    insert into exam_paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paperid != null">
        paperId,
      </if>
      <if test="papername != null">
        paperName,
      </if>
      <if test="papertype != null">
        paperType,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paperid != null">
        #{paperid,jdbcType=INTEGER},
      </if>
      <if test="papername != null">
        #{papername,jdbcType=VARCHAR},
      </if>
      <if test="papertype != null">
        #{papertype,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sz.paper.model.PaperExample" resultType="java.lang.Long">
    select count(*) from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_paper
    <set>
      <if test="record.paperid != null">
        paperId = #{record.paperid,jdbcType=INTEGER},
      </if>
      <if test="record.papername != null">
        paperName = #{record.papername,jdbcType=VARCHAR},
      </if>
      <if test="record.papertype != null">
        paperType = #{record.papertype,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_paper
    set paperId = #{record.paperid,jdbcType=INTEGER},
      paperName = #{record.papername,jdbcType=VARCHAR},
      paperType = #{record.papertype,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sz.paper.model.Paper">
    update exam_paper
    <set>
      <if test="papername != null">
        paperName = #{papername,jdbcType=VARCHAR},
      </if>
      <if test="papertype != null">
        paperType = #{papertype,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where paperId = #{paperid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sz.paper.model.Paper">
    update exam_paper
    set paperName = #{papername,jdbcType=VARCHAR},
      paperType = #{papertype,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where paperId = #{paperid,jdbcType=INTEGER}
  </update>
</mapper>