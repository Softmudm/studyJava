<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sz.wx.dao.ScoreMapper">
  <resultMap id="BaseResultMap" type="com.sz.wx.model.Score">
    <id column="scoreId" jdbcType="INTEGER" property="scoreid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="paperId" jdbcType="INTEGER" property="paperid" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="rights" jdbcType="INTEGER" property="rights" />
    <result column="errors" jdbcType="INTEGER" property="errors" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    scoreId, userId, paperId, score, rights, errors
  </sql>
  <select id="selectByExample" parameterType="com.sz.wx.model.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from exam_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_score
    where scoreId = #{scoreid,jdbcType=INTEGER}
  </select>
  <!-- 联合查询分数表和试卷表 -->
  <select id="selectByPaperName" resultType="com.sz.wx.model.ScorePaper" parameterType="java.util.Map">
    select s.scoreId,s.paperId,p.papername,p.remarks,s.score,s.rights,s.errors
    from exam_score s
    left join exam_paper p on s.paperid=p.paperid
    <where>
      <if test="userId!=null and userId!=''">
        and s.userId=#{userId}
      </if>
      <if test="paperName!=null and paperName!=''">
        and p.paperName like concat('%',#{paperName},'%')
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_score
    where scoreId = #{scoreid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sz.wx.model.ScoreExample">
    delete from exam_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!-- 插入时返回id值 -->
  <insert id="insertReturnId" parameterType="com.sz.wx.model.Score" useGeneratedKeys="true" keyColumn="scoreid">
    insert into exam_score (scoreId, userId, paperId,
      score, rights, errors
      )
    values (#{scoreid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{paperid,jdbcType=INTEGER},
      #{score,jdbcType=INTEGER}, #{rights,jdbcType=INTEGER}, #{errors,jdbcType=INTEGER}
      )
    <selectKey resultType="int" keyProperty="scoreid">
      select LAST_INSERT_ID() as id
    </selectKey>
  </insert>
  <insert id="insert" parameterType="com.sz.wx.model.Score">
    insert into exam_score (scoreId, userId, paperId, 
      score, rights, errors
      )
    values (#{scoreid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{paperid,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER}, #{rights,jdbcType=INTEGER}, #{errors,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sz.wx.model.Score">
    insert into exam_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scoreid != null">
        scoreId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="paperid != null">
        paperId,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="rights != null">
        rights,
      </if>
      <if test="errors != null">
        errors,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scoreid != null">
        #{scoreid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="paperid != null">
        #{paperid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="rights != null">
        #{rights,jdbcType=INTEGER},
      </if>
      <if test="errors != null">
        #{errors,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>



  <select id="countByExample" parameterType="com.sz.wx.model.ScoreExample" resultType="java.lang.Long">
    select count(*) from exam_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_score
    <set>
      <if test="record.scoreid != null">
        scoreId = #{record.scoreid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.paperid != null">
        paperId = #{record.paperid,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.rights != null">
        rights = #{record.rights,jdbcType=INTEGER},
      </if>
      <if test="record.errors != null">
        errors = #{record.errors,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_score
    set scoreId = #{record.scoreid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      paperId = #{record.paperid,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      rights = #{record.rights,jdbcType=INTEGER},
      errors = #{record.errors,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sz.wx.model.Score">
    update exam_score
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="paperid != null">
        paperId = #{paperid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="rights != null">
        rights = #{rights,jdbcType=INTEGER},
      </if>
      <if test="errors != null">
        errors = #{errors,jdbcType=INTEGER},
      </if>
    </set>
    where scoreId = #{scoreid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sz.wx.model.Score">
    update exam_score
    set userId = #{userid,jdbcType=INTEGER},
      paperId = #{paperid,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      rights = #{rights,jdbcType=INTEGER},
      errors = #{errors,jdbcType=INTEGER}
    where scoreId = #{scoreid,jdbcType=INTEGER}
  </update>
</mapper>